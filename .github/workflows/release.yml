name: Build TWiLight Menu++ Release

on:
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest
    container: devkitpro/devkitarm
    name: Build with Docker using devkitARM
    outputs:
      commit_tag: ${{ steps.make-cias.outputs.commit_tag }}
      commit_hash: ${{ steps.make-cias.outputs.commit_hash }}
      author_name: ${{ steps.make-cias.outputs.author_name }}
      committer_name: ${{ steps.make-cias.outputs.committer_name }}
      commit_subject: ${{ steps.make-cias.outputs.commit_subject }}
      commit_message: ${{ steps.make-cias.outputs.commit_message }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v1
        with:
          submodules: recursive
      - name: Install tools
        run: |
          echo deb http://deb.debian.org/debian stable main contrib non-free >> /etc/apt/sources.list
          sudo apt-get update
          sudo apt-get install chromium ffmpeg fonts-noto-cjk jq libxml2-utils p7zip-full python -y
      - name: Build manual pages
        run: make -C manual pages
      - name: Build TWiLightMenu++
        run: make package
      - name: Make booter and TWiLightMenu CIAs
        id: make-cias
        run: |
          cd booter/
          chmod +x make_cia
          ./make_cia --srl="booter.nds" --id_0=$(git rev-parse --short=7 HEAD) --tikID=$(git rev-parse --short=16 HEAD)
          mkdir -p "../7zfile/3DS - CFW users/"
          cp "booter.cia" "../7zfile/3DS - CFW users/TWiLight Menu.cia"

          cd ../rungame/
          chmod +x make_cia
          ./make_cia --srl="rungame.nds" --id_0=$(git rev-parse --short=7 HEAD) --tikID=$(git rev-parse --short=16 HEAD)
          cp "rungame.cia" "../7zfile/3DS - CFW users/TWiLight Menu - Game booter.cia"

          echo ::set-output name=commit_tag::$(git describe --abbrev=0 --tags)
          echo ::set-output name=commit_hash::$(git log --format=%h -1)

          # Webhook info
          echo ::set-output name=author_name::$(git log -1 "$GITHUB_SHA" --pretty="%aN")
          echo ::set-output name=committer_name::$(git log -1 "$GITHUB_SHA" --pretty="%cN")
          echo ::set-output name=commit_subject::$(git log -1 "$GITHUB_SHA" --pretty="%s")
          echo ::set-output name=commit_message::$(git log -1 "$GITHUB_SHA" --pretty="%b")
      - name: Pack 7z Package for release
        run: |
          # Make artifacts directory
          mkdir -p ~/artifacts

          # Theme is currently unused
          rm -rf 7zfile/_nds/TWiLightMenu/akmenu

          # Debug 7z
          mv 7zfile/debug debug
          7z a TWiLightMenu-debug-release.7z debug
          mv TWiLightMenu-debug-release.7z ~/artifacts

          mkdir -p 7zfile/_nds/TWiLightMenu/boxart/
          mkdir -p 7zfile/_nds/TWiLightMenu/extras/
          mkdir -p 7zfile/_nds/TWiLightMenu/gamesettings/

          # nds-bootstrap
          mkdir -p nds-bootstrap
          cd nds-bootstrap
          curl -LO https://github.com/DS-Homebrew/nds-bootstrap/releases/latest/download/nds-bootstrap.7z
          7z x nds-bootstrap.7z
          mv nds-bootstrap.* ..
          mkdir -p TWiLightMenu
          mv release-bootstrap.ver TWiLightMenu
          cd ..
          curl -L https://github.com/TWLBot/Builds/blob/master/nds-bootstrap.7z?raw=true -o nds-bootstrap.7z
          7z x nds-bootstrap.7z
          mv nds-bootstrap/TWiLightMenu/release-bootstrap.ver 7zfile/_nds/TWiLightMenu
          mv nds-bootstrap/TWiLightMenu/nightly-bootstrap.ver 7zfile/_nds/TWiLightMenu
          mv nds-bootstrap/b4ds-release.nds 7zfile/Flashcard\ users/_nds/
          mv nds-bootstrap/b4ds-nightly.nds 7zfile/Flashcard\ users/_nds/
          mv nds-bootstrap/nds-bootstrap-release.nds 7zfile/_nds/
          mv nds-bootstrap/nds-bootstrap-nightly.nds 7zfile/_nds/
          mv nds-bootstrap/nds-bootstrap-hb-release.nds 7zfile/DSi\&3DS\ -\ SD\ card\ users/_nds/
          mv nds-bootstrap/nds-bootstrap-hb-nightly.nds 7zfile/DSi\&3DS\ -\ SD\ card\ users/_nds/

          # version.txt
          printf "TWiLight Menu++: $(git describe --tags)\nnds-bootstrap: $(jq --raw-output '.tag_name' nds-bootstrap.json)\n\nRocketRobz, ahezard\n" > 7zfile/version.txt

          # Really dumb hidden file that for some reason fixes the releases
          touch 7zfile/.ignoreme

          # Main 7z
          cp -r 7zfile TWiLightMenu
          cd TWiLightMenu
          7z a TWiLightMenu.7z .
          mv TWiLightMenu.7z ~/artifacts

          # DSi 7z
          cp -r DSi\ -\ CFW\ users/SDNAND\ root/* .
          rm -rf DSi\ -\ CFW\ users
          cp -r DSi\&3DS\ -\ SD\ card\ users/* .
          rm -rf DSi\&3DS\ -\ SD\ card\ users
          rm -rf 3DS\ -\ CFW\ users
          rm -rf Flashcard\ users
          rm -rf _nds/GBARunner2_arm7dldi_3ds.nds
          rm -rf _nds/GBARunner2_arm7dldi_nodsp_3ds.nds
          rm -rf _nds/TwiLightMenu/bootplg.srldr
          rm -rf _nds/TwiLightMenu/gbaswitch.srldr
          7z a TWiLightMenu-DSi.7z
          mv TWiLightMenu-DSi.7z ~/artifacts

          # 3DS 7z
          cd ..
          rm -rf TWiLightMenu
          cp -r 7zfile/ TWiLightMenu/
          cd TWiLightMenu
          cp -r 3DS\ -\ CFW\ users/* .
          rm -rf 3DS\ -\ CFW\ users
          cp -r DSi\&3DS\ -\ SD\ card\ users/* .
          rm -rf DSi\&3DS\ -\ SD\ card\ users
          rm -rf DSi\ -\ CFW\ users
          rm -rf Flashcard\ users
          rm -rf _nds/GBARunner2_arm7dldi_dsi.nds
          rm -rf _nds/GBARunner2_arm7dldi_nodsp_dsi.nds
          rm -rf _nds/TwiLightMenu/unlaunch
          rm -rf _nds/TwiLightMenu/bootplg.srldr
          rm -rf _nds/TwiLightMenu/gbaswitch.srldr
          7z a TWiLightMenu-3DS.7z
          mv TWiLightMenu-3DS.7z ~/artifacts

          # Flashcard 7z
          cd ..
          rm -rf TWiLightMenu
          cp -r 7zfile/ TWiLightMenu/
          cd TWiLightMenu
          cp -r Flashcard\ users/* .
          rm -rf Flashcard\ users
          rm -rf 3DS\ -\ CFW\ users
          rm -rf DSi\&3DS\ -\ SD\ card\ users
          rm -rf DSi\ -\ CFW\ users
          7z a TWiLightMenu-Flashcard.7z
          mv TWiLightMenu-Flashcard.7z ~/artifacts
      - name: Publish build to GH Actions
        uses: actions/upload-artifact@v2
        with:
          path: ~/artifacts/*
          name: build

  # Only run this for non-PR jobs.
  publish_build_twlbot:
    runs-on: ubuntu-latest
    name: "Publish build to ${{ github.repository }}"
    if: ${{ success() }}
    needs: build
    env:
      COMMIT_TAG: ${{ needs.build.outputs.commit_tag }}
      COMMIT_MESSAGE: ${{ needs.build.outputs.commit_message }}
    outputs:
      current_date: ${{ steps.commit.outputs.current_date }}
      twlbot_commit: ${{ steps.commit.outputs.twlbot_commit }}
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: build
          path: build
      - name: Commit and push debug files to TWLBot/Builds
        id: commit
        run: |
          CURRENT_DATE=$(date +"%Y%m%d-%H%M%S")
          echo ::set-output name=current_date::$CURRENT_DATE

          git config --global user.email "flamekat54@aol.com"
          git config --global user.name "TWLBot"
          git clone --depth 1 https://${{ secrets.TWLBOT_TOKEN }}@github.com/TWLBot/Builds.git
          cd Builds/
          cp ${{ github.workspace }}/build/TWiLightMenu-debug-release.7z .
          git stage .
          git commit -m "TWiLightMenu (Release) | $COMMIT_TAG"
          git push origin master
      - name: Upload to ${{ github.repository }} release
        run: |
          # Delete debug 7z
          rm ${{ github.workspace }}/build/TWiLightMenu-debug-release.7z

          ID=$(jq --raw-output '.release.id' $GITHUB_EVENT_PATH)

          for file in ${{ github.workspace }}/build/*; do
            AUTH_HEADER="Authorization: token ${{ secrets.GITHUB_TOKEN }}"
            CONTENT_LENGTH="Content-Length: $(stat -c%s $file)"
            CONTENT_TYPE="Content-Type: application/7z-x-compressed"
            UPLOAD_URL="https://uploads.github.com/repos/${{ github.repository }}/releases/$ID/assets?name=$(basename $file)"

            curl -XPOST -H "$AUTH_HEADER" -H "$CONTENT_LENGTH" -H "$CONTENT_TYPE" --upload-file "$file" "$UPLOAD_URL"
          done

  send_webhook:
    runs-on: ubuntu-latest
    needs: [publish_build_twlbot, build]
    name: Send Discord webhook
    env:
      CURRENT_DATE: ${{ needs.publish_build.outputs.current_date }}
      AUTHOR_NAME: ${{ needs.build.outputs.author_name }}
      COMMITTER_NAME: ${{ needs.build.outputs.committer_name }}
      COMMIT_SUBJECT: ${{ needs.build.outputs.commit_subject }}
      COMMIT_MESSAGE: ${{ needs.build.outputs.commit_message }}
    steps:
      - name: Send success webhook
        if: ${{ success() }}
        run: |
          curl -o send.sh https://raw.githubusercontent.com/DS-Homebrew/discord-webhooks/master/send-ghactions.sh
          chmod +x send.sh
          ./send.sh success ${{ secrets.WEBHOOK_URL }}
      - name: Send failure webhook
        if: ${{ failure() }}
        run: |
          curl -o send.sh https://raw.githubusercontent.com/DS-Homebrew/discord-webhooks/master/send-ghactions.sh
          chmod +x send.sh
          ./send.sh failure ${{ secrets.WEBHOOK_URL }}
